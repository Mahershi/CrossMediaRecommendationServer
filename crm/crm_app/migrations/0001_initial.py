# Generated by Django 4.0.3 on 2022-03-11 18:11

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(error_messages={'unique': 'Email Already Exists'}, max_length=254, unique=True)),
                ('username', models.CharField(error_messages={'unique': 'Username already taken'}, max_length=16, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('birth_year', models.CharField(max_length=4)),
                ('password', models.CharField(max_length=100)),
                ('image_url', models.CharField(blank=True, max_length=300)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookModel',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('date_published', models.CharField(max_length=15)),
                ('publisher', models.CharField(max_length=50)),
                ('overview', models.TextField()),
                ('link', models.CharField(max_length=100)),
                ('cover_link', models.CharField(max_length=100)),
                ('amazon_link', models.CharField(max_length=100)),
                ('content_rating', models.CharField(max_length=5)),
                ('isbn_id', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'books',
            },
        ),
        migrations.CreateModel(
            name='BookRecpModel',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('series', models.CharField(max_length=200)),
                ('author', models.CharField(max_length=100)),
                ('genres', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=None)),
            ],
            options={
                'db_table': 'books_recp',
            },
        ),
        migrations.CreateModel(
            name='CastModel',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('profile_path', models.CharField(max_length=50)),
                ('popularity', models.CharField(max_length=5)),
            ],
            options={
                'db_table': 'cast_members',
            },
        ),
        migrations.CreateModel(
            name='GameModel',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('available_at', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=15), size=None)),
                ('release', models.CharField(max_length=10)),
                ('background_image', models.CharField(max_length=100)),
                ('website', models.CharField(max_length=100)),
                ('screenshots', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('platforms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), size=None)),
            ],
            options={
                'db_table': 'games',
            },
        ),
        migrations.CreateModel(
            name='GameRecpModel',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=None)),
                ('publishers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=None)),
                ('genres', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=None)),
                ('esrb_rating', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'games_recp',
            },
        ),
        migrations.CreateModel(
            name='GenreModel',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'genres',
            },
        ),
        migrations.CreateModel(
            name='KeywordModel',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'keywords',
            },
        ),
        migrations.CreateModel(
            name='MovieModel',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('adult', models.BooleanField(default=False)),
                ('imdb_id', models.CharField(max_length=20)),
                ('language', models.CharField(max_length=5)),
                ('popularity', models.CharField(max_length=5)),
                ('poster_path', models.CharField(max_length=30)),
                ('release_date', models.CharField(max_length=15)),
                ('runtime', models.CharField(max_length=5)),
                ('spoken_languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=5), size=None)),
                ('status', models.CharField(max_length=10)),
                ('tagline', models.TextField()),
                ('backdrop_path', models.CharField(max_length=30)),
                ('title', models.CharField(default='', max_length=100)),
                ('overview', models.TextField(default='')),
                ('genres', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), null=True, size=None)),
                ('production_companies', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), null=True, size=None)),
                ('cast_members', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), null=True, size=None)),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), null=True, size=None)),
            ],
            options={
                'db_table': 'movies',
            },
        ),
        migrations.CreateModel(
            name='MovieMovieRecomModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id1', models.CharField(default='', max_length=15)),
                ('movie_id2', models.CharField(default='', max_length=15)),
                ('score', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
            ],
            options={
                'db_table': 'movie_to_movie2',
            },
        ),
        migrations.CreateModel(
            name='MovieRecpModel',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('overview', models.TextField()),
                ('genres', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=None)),
                ('production_companies', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=None)),
                ('cast_members', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=None)),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), size=None)),
            ],
            options={
                'db_table': 'movies_recp',
            },
        ),
        migrations.CreateModel(
            name='MovieTvRecomModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.CharField(max_length=15)),
                ('tv_id', models.CharField(max_length=15)),
                ('score', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
            ],
            options={
                'db_table': 'movie_to_tv',
            },
        ),
        migrations.CreateModel(
            name='TvGenreModel',
            fields=[
                ('id', models.CharField(max_length=101, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'genres_tv',
            },
        ),
        migrations.CreateModel(
            name='TvModel',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('in_production', models.BooleanField(default=False)),
                ('last_air_date', models.CharField(max_length=15)),
                ('no_episodes', models.IntegerField()),
                ('no_seasons', models.IntegerField()),
                ('original_language', models.CharField(max_length=5)),
                ('poster_path', models.CharField(max_length=30)),
                ('spoken_languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=5), size=None)),
                ('status', models.CharField(max_length=10)),
                ('tagline', models.TextField()),
                ('title', models.CharField(default='', max_length=100)),
                ('overview', models.TextField(null=True)),
                ('genres', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), null=True, size=None)),
                ('production_companies', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), null=True, size=None)),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), null=True, size=None)),
                ('type', models.CharField(max_length=10, null=True)),
                ('cast_members', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), null=True, size=None)),
            ],
            options={
                'db_table': 'tv',
            },
        ),
        migrations.CreateModel(
            name='TvRecpModel',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('overview', models.TextField()),
                ('genres', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=None)),
                ('production_companies', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=None)),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=None)),
                ('type', models.CharField(max_length=10)),
                ('cast_members', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=None)),
            ],
            options={
                'db_table': 'tv_recp',
            },
        ),
        migrations.CreateModel(
            name='TvTvRecomModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tv_id1', models.CharField(default='', max_length=15)),
                ('tv_id2', models.CharField(default='', max_length=15)),
                ('score', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
            ],
            options={
                'db_table': 'tv_to_tv',
            },
        ),
        migrations.CreateModel(
            name='UserGenreModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_list', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=25), blank=True, size=None)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TvRatingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tv', models.CharField(max_length=20)),
                ('rating', models.IntegerField(default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TvListModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tv', models.CharField(max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StandardUnitsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_id', models.CharField(max_length=20)),
                ('title_type', models.IntegerField()),
                ('su', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SimilaritysModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('similarity', models.DecimalField(decimal_places=2, max_digits=3)),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user1', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user2', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MovieRatingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie', models.CharField(max_length=20)),
                ('rating', models.IntegerField(default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MovieListModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie', models.CharField(max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GameRatingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game', models.CharField(max_length=20)),
                ('rating', models.IntegerField(default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookRatingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.CharField(max_length=20)),
                ('rating', models.IntegerField(default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
